!_TAG_FILE_FORMAT	1	/original ctags format/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Bounce	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void Bounce(void)$/
CHAR_HEIGHT	C:/Users/Imara/repository/git/PropGame/src/vgademo/text.h	8
CHAR_HEIGHT2	C:/Users/Imara/repository/git/PropGame/src/vgademo/text2.h	8
CHAR_WIDTH	C:/Users/Imara/repository/git/PropGame/src/vgademo/text.h	9
CHAR_WIDTH2	C:/Users/Imara/repository/git/PropGame/src/vgademo/text2.h	9
COLOR_BLACK	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	15
COLOR_BLUE	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	14
COLOR_CYAN	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	16
COLOR_GREEN	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	19
COLOR_MAGENTA	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	21
COLOR_MAX	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	22
COLOR_RED	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	18
COLOR_WHITE	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	17
COLOR_YELLOW	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	20
CheckInnerWallCollisions	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void CheckInnerWallCollisions(ObjectT *obj, int leftcol, int rightcol, int hole)$/
CheckWallCollisions	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void CheckWallCollisions(ObjectT *obj, int mincol, int maxcol, int minrow, int maxrow)$/
DRAW_DEFINED	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	9
DisplayRawRomFont	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void DisplayRawRomFont(void)$/
DisplayRomFont	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void DisplayRomFont(void)$/
DisplayRomFont2	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void DisplayRomFont2(void)$/
DrawHorzChar	C:/Users/Imara/repository/git/PropGame/src/vgademo/text.c	/^void DrawHorzChar(int col, int row, uchar *ptr2, int stride2, int scale, int color)$/
DrawHorzChar2	C:/Users/Imara/repository/git/PropGame/src/vgademo/text2.c	/^void DrawHorzChar2(int col, int row, uint *ptr2, int scale, int color, int odd)$/
DrawText	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void DrawText()$/
DrawVertChar	C:/Users/Imara/repository/git/PropGame/src/vgademo/text.c	/^void DrawVertChar(int col, int row, uchar *ptr2, int stride2, int scale, int color)$/
DrawVertChar2	C:/Users/Imara/repository/git/PropGame/src/vgademo/text2.c	/^void DrawVertChar2(int col, int row, uint *ptr2, int scale, int color, int odd)$/
HOLE_BOT	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	23
HOLE_TOP	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	22
ObjectS	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^typedef struct ObjectS {$/
ObjectT	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^} ObjectT;$/
PlotAntiLog	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void PlotAntiLog(void)$/
PlotLog	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void PlotLog(void)$/
PlotSine	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void PlotSine(void)$/
PlotSinewave	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void PlotSinewave()$/
PutCharImage	C:/Users/Imara/repository/git/PropGame/src/vgademo/text.c	/^void PutCharImage(int col, int row, int value, int scale, int vert, int color)$/
PutCharImage2	C:/Users/Imara/repository/git/PropGame/src/vgademo/text2.c	/^void PutCharImage2(int col, int row, int value, int scale, int vert, int color)$/
PutStringImage	C:/Users/Imara/repository/git/PropGame/src/vgademo/text.c	/^void PutStringImage(int col, int row, char *str, int scale, int vert, int color)$/
PutStringImage2	C:/Users/Imara/repository/git/PropGame/src/vgademo/text2.c	/^void PutStringImage2(int col, int row, char *str, int scale, int vert, int color)$/
Step	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void Step(void)$/
VgaStart	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void VgaStart(int pinGroup, int verticalResolution, int *newDisplayPointer,$/
VgaVarS	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^typedef struct VgaVarS {$/
VgaVarT	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^} VgaVarT;$/
background	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^volatile int background = 0;$/
bitsPerPixel	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	18
buffer1	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t *buffer1;$/
col	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    int col;$/
color_table	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	/^static unsigned char color_table[COLOR_MAX][3] = {$/
colortable1	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t *colortable1;$/
delcol	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    int delcol;$/
delrow	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    int delrow;$/
directionState	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t directionState;$/
drawdot	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^inline void drawdot(int col, int row, int color)$/
drawdotfast	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^inline void drawdotfast(int col, int row, int color)$/
drawhorzline	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^void drawhorzline(int col0, int col1, int row, int color)$/
drawline	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^void drawline(int col0, int row0, int col1, int row1, int color)$/
drawobject	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^void drawobject(int col, int row, unsigned int *ptr, int width, int height)$/
drawvertline	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^void drawvertline(int col, int row0, int row1, int color)$/
frequencyState	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t frequencyState;$/
getindex	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^inline int getindex(uint8_t *ptr)$/
height	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    int height;$/
horizontalLongs	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t horizontalLongs;$/
horizontalPixels	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	20
horizontalScaling	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	19
inittiles	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^void inittiles(int val)$/
invisibleScale	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t invisibleScale;$/
lastindex	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^volatile int lastindex = 0;$/
lockindex	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	/^volatile int lockindex = 0;$/
main	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^int main(void)$/
mass	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    int mass;$/
ncol	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	12
nrow	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.c	13
object	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t *object;$/
pixelColors	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^int pixelColors = 0xfc3c000c;$/
pixelColorsAddress	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t *pixelColorsAddress;$/
prevcol	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    int prevcol;$/
row	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    int row;$/
sine	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^int sine(int angle)$/
syncIndicator	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^volatile int syncIndicator = 0;$/
syncIndicatorAddress	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t *syncIndicatorAddress;$/
tilemap	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^uint8_t *tilemap = (uint8_t *)vga_array;$/
tilemap0	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^uint8_t *tilemap0 = (uint8_t *)vga_array;$/
tilemap1	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^uint8_t tilemap1[30*40];$/
tiles	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^uint32_t tiles[256*16];$/
uchar	C:/Users/Imara/repository/git/PropGame/src/vgademo/draw.h	12
uint	C:/Users/Imara/repository/git/PropGame/src/vgademo/text2.h	11
verticalPixels	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t verticalPixels;$/
verticalScaling	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t verticalScaling;$/
vga_array	C:/Users/Imara/repository/git/PropGame/src/vgademo/vga.c	/^uint8_t vga_array[] = {$/
vga_size	C:/Users/Imara/repository/git/PropGame/src/vgademo/vga.c	/^int vga_size = sizeof(vga_array);$/
vga_str	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void vga_str(char *str)$/
vga_str2	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void vga_str2(char *str)$/
vga_text_col	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^int vga_text_col = 0;$/
vga_text_row	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^int vga_text_row = 0;$/
vga_tx	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void vga_tx(int val)$/
vga_tx2	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^void vga_tx2(int val)$/
videoState	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t videoState;$/
visibleScale	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    uint32_t visibleScale;$/
width	C:/Users/Imara/repository/git/PropGame/src/vgademo/vgademo.c	/^    int width;$/
